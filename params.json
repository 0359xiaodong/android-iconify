{"name":"Android-iconify","tagline":"FontAwesome integration for Android","body":"![Alt](https://raw.github.com/JoanZapata/android-iconify/master/header.png)\r\n\r\n[![Alt](http://developer.android.com/images/brand/en_app_rgb_wo_45.png)](https://play.google.com/store/apps/details?id=com.joanzapata.android.icons.sample)\r\n\r\n> **Iconify** makes it easy to include any of the **[361 FontAwesome icons](http://fortawesome.github.io/Font-Awesome/icons)** in a native Android application. \r\n\r\n> If you're not familiar with it, ```FontAwesome``` is a **font** in which some special characters draw vectorial icons instead of letters. That means you can **scale them as much as you want**, and you can **apply text transforms** on these icons, just like you would do with texts. These icons will **never ever become fuzzy**.\r\n\r\n## How to use\r\n\r\nWrap icon names with ```{ }``` where you want the icon to appear in the text.\r\n\r\n```xml\r\n<IconTextView\r\n    android:text=\"FontAwesome {icon_flag} in Android {icon_android} !\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\" />\r\n```\r\n\r\n![Alt](https://raw.github.com/JoanZapata/android-iconify/master/texts.png)\r\n\r\n> You can use any icon from [FontAwesome 3.2.0](http://fortawesome.github.io/Font-Awesome/icons/)\r\n\r\n\r\n# Transforms\r\n\r\nThe good thing is that you can **scale** and apply **shadows** and **colors** to the icon, like any text.\r\n\r\n```xml\r\n<IconTextView\r\n    android:text=\"{icon_android}\"\r\n    android:shadowColor=\"#22000000\"\r\n    android:shadowDx=\"3\"\r\n    android:shadowDy=\"3\"\r\n    android:shadowRadius=\"1\"\r\n    android:textSize=\"90dp\"\r\n    android:textColor=\"#FF33B5E5\"\r\n    ... />\r\n```\r\n\r\n![Alt](https://raw.github.com/JoanZapata/android-iconify/master/androids.png)\r\n\r\n## Buttons\r\n\r\nIt plays nice with buttons, just use ```IconButton``` instead of ```Button```.\r\n\r\n```xml\r\n<IconButton\r\n    android:text=\"{icon_retweet} Retweet\"\r\n    ... />\r\n```\r\n\r\n![Alt](https://raw.github.com/JoanZapata/android-iconify/master/buttons.png)\r\n\r\n## Other views\r\n\r\nAny ```View``` that extends ```TextView``` can be iconified programmatically.\r\n\r\n```java\r\nTextView myTextView = (TextView) findViewById(R.id.myTextView);\r\nIconify.addIcons(myTextView);\r\n```\r\n\r\n## [Download JAR](http://search.maven.org/remotecontent?filepath=com/joanzapata/android/android-iconify/1.0.0/android-iconify-1.0.0.jar)\r\n\r\nOr via **Maven Central**\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.joanzapata.android</groupId>\r\n    <artifactId>android-iconify</artifactId>\r\n    <version>1.0.0</version>\r\n</dependency>\r\n```\r\n\r\n## License\r\n\r\n```\r\nCopyright 2013 Joan Zapata\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nIt uses FontAwesome font, licensed under OFL 1.1, which is compatible\r\nwith this library's license.\r\n\r\n    http://scripts.sil.org/cms/scripts/render_download.php?format=file&media_id=OFL_plaintext&filename=OFL.txt\r\n    \r\n```\r\n","google":"UA-41664988-1","note":"Don't delete this file! It's used internally to help with page regeneration."}